Now you have two branches, [master] and readme-edits. They look exactly the same, but not for long! Next we'll add our changes to  the new branch.
Bravo! Now, you're on the code view for your readme-edits branch, which is a copy of master.
Let's make some edits.
On GitHub, Saved changes are called commits. 
Each commit has an associated commit message, which is a description explaining why a particular change was made.
Commit messages capture the history of your changes, so other contributors cat understand that you've done and why.
These changes will be mad to just README file on your readme-edits branch, so now this branch contains content that's different from master.
Open a Pull Request
Nice edits! Now that you have changes in a branch off of master, you can open a pull request.
Pull Requests are the heart of collaboration on GitHub.

Step.4 Open a Pull Request
Nice edits! Now that you have changes in a branch off of master,you cat open a pull request.

Pull Requests are the heart of collaboration on GitHub.
When you open a pull request, you're proposing your changes and requesting that sdomeone review and pull in your contribution and merge them into their branch. Pull requests show diffs, or differrences, of the content from both branches. The chages, additions, and subtraction are shown in green and red.

As soon as you make a commit, you can open a pull request and start a discussion, even before the code is finished.

Byusing Github's @mention system in your pull request message, you can ask for feedback from specific people or teams, whether they're down the hall or 10 time zones away.

You can even open pull requests in your own repository and merge them yourself. It's a great way to learn the GitHub flow before working on lager projects.

Open a Pull Request for changes to the README.

Step 5. Marge your Pull Request
In this final step, it's time to bring your change together- marging your readme-edits branch into the master branch.
1.Click the green Merge pull request button to merge the changes into master.
2.Click Confirm merge.
3.Go ahead and delete the branch, since it's changes have been incorporated, with the Delete branch button inthe purple box.

Celebrate!

By completing this tutorial, you've learned to create a project and make a pull request on GitHub!

Here's what you accomplished in this tutorial:

- Created an open source repository
- Startrd and managed a new branch
- Changed a file and committed those changes to GitHub
- Opened and merged a Pull Request

Take a look at your GitHub profile and see your new contribution squares!wwwwww

To learn more ahout the power of Pull Requests, we recommend reading the GitHub flow Guide. You mighy also visit GitHub Explore and get involved in an Open Source project

Tip:Check out our other Guides, Youtube~~~~.





















